{
  "x-generator": "NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "WRA Umbraco API",
    "description": "WRA Umbraco Service API",
    "contact": {
      "name": "Eric Solari",
      "url": "https://www.wra.org",
      "email": "eric@wra.org"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/git/git-scm.com/blob/main/MIT-LICENSE.txt"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app2.wra.org/umbraco"
    }
  ],
  "paths": {
    "/api/v1/imisauth/login": {
      "post": {
        "tags": [
          "IMISAuth"
        ],
        "summary": "Login a member.",
        "operationId": "IMISAuth_Post",
        "requestBody": {
          "x-name": "req",
          "description": "Login Request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/imismember/{imisId}": {
      "get": {
        "tags": [
          "IMISMember"
        ],
        "summary": "Retrieves a member by iMIS Id.",
        "operationId": "IMISMember_Get",
        "parameters": [
          {
            "name": "imisId",
            "in": "path",
            "required": true,
            "description": "iMISId.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/imisproduct/{productCode}": {
      "get": {
        "tags": [
          "IMISProduct"
        ],
        "summary": "Retrieves a single product from the currently available products.",
        "operationId": "IMISProduct_Get",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "description": "Product Code.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductData"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/imisproduct": {
      "get": {
        "tags": [
          "IMISProduct"
        ],
        "summary": "Retrieve all products, courses, and events currently available at the WRA.",
        "operationId": "IMISProduct_GetAllWebProductsLightburn",
        "responses": {
          "200": {
            "description": "A list of \"products\" with associated details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductData"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/webhook/{eventType}": {
      "post": {
        "tags": [
          "WebHook"
        ],
        "operationId": "WebHook_ReceiveEvent",
        "parameters": [
          {
            "name": "eventType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/webhook/subscribe": {
      "post": {
        "tags": [
          "WebHook"
        ],
        "operationId": "WebHook_SubscribeToEvent",
        "requestBody": {
          "x-name": "subscriptionModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/tokens": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "Request an access token using credentials.",
        "operationId": "Tokens_GetToken",
        "parameters": [
          {
            "name": "tenant",
            "in": "header",
            "required": true,
            "description": "Input your tenant Id to access this API",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/tokens/refresh": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "Request an access token using a refresh token.",
        "operationId": "Tokens_Refresh",
        "parameters": [
          {
            "name": "tenant",
            "in": "header",
            "required": true,
            "description": "Input your tenant Id to access this API",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/api/v1/committee/search": {
      "post": {
        "tags": [
          "Committee"
        ],
        "summary": "Search committees using available filters.",
        "operationId": "Committee_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCommitteesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfCommitteeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/committee": {
      "get": {
        "tags": [
          "Committee"
        ],
        "summary": "Get a list of all committees.",
        "operationId": "Committee_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommitteeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Committee"
        ],
        "summary": "Create a new committee.",
        "operationId": "Committee_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommitteeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/committee/{id}": {
      "get": {
        "tags": [
          "Committee"
        ],
        "summary": "Get a committee.",
        "operationId": "Committee_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitteeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Committee"
        ],
        "summary": "Update a committee.",
        "operationId": "Committee_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommitteeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Committee"
        ],
        "summary": "Delete a committee.",
        "operationId": "Committee_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/committee/export": {
      "post": {
        "tags": [
          "Committee"
        ],
        "summary": "Export committees.",
        "operationId": "Committee_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCommitteesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/company/search": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Search companies using available filters.",
        "operationId": "Company_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCompaniesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfCompanyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/company": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get a list of all companies.",
        "operationId": "Company_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Create a new company.",
        "operationId": "Company_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/company/{id}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get a company.",
        "operationId": "Company_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Update a company.",
        "operationId": "Company_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Delete a company.",
        "operationId": "Company_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/company/export": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Export companies.",
        "operationId": "Company_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCompaniesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/companysubscription/search": {
      "post": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Search company subscriptions using available filters.",
        "operationId": "CompanySubscription_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCompanySubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfCompanySubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/companysubscription": {
      "get": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Get a list of all company subscriptions.",
        "operationId": "CompanySubscription_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubscriptionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Create a new company subscription.",
        "operationId": "CompanySubscription_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanySubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/companysubscription/{id}": {
      "get": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Get a company subscription.",
        "operationId": "CompanySubscription_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Update a company subscription.",
        "operationId": "CompanySubscription_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanySubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Delete a company subscription.",
        "operationId": "CompanySubscription_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/companysubscription/export": {
      "post": {
        "tags": [
          "CompanySubscription"
        ],
        "summary": "Export company subscriptions.",
        "operationId": "CompanySubscription_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCompanySubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/discount/search": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Search discounts using available filters.",
        "operationId": "Discount_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchDiscountsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfDiscountDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/discount": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Get a list of all discounts.",
        "operationId": "Discount_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Create a new discount.",
        "operationId": "Discount_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscountRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/discount/{id}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Get a discount.",
        "operationId": "Discount_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Update a discount.",
        "operationId": "Discount_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscountRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Delete a discount.",
        "operationId": "Discount_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/discount/export": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Export discounts.",
        "operationId": "Discount_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportDiscountsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/localboard/search": {
      "post": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Search local boards using available filters.",
        "operationId": "LocalBoard_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLocalBoardsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfLocalBoardDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/localboard": {
      "get": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Get a list of all local boards.",
        "operationId": "LocalBoard_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocalBoardDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Create a new local board.",
        "operationId": "LocalBoard_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocalBoardRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/localboard/{id}": {
      "get": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Get a local board.",
        "operationId": "LocalBoard_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalBoardDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Update a local board.",
        "operationId": "LocalBoard_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocalBoardRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Delete a local board.",
        "operationId": "LocalBoard_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/localboard/export": {
      "post": {
        "tags": [
          "LocalBoard"
        ],
        "summary": "Export local boards.",
        "operationId": "LocalBoard_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportLocalBoardsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercommittee/search": {
      "post": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Search member committees using available filters.",
        "operationId": "MemberCommittee_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemberCommitteesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberCommitteeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercommittee": {
      "get": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Get a list of all member committees.",
        "operationId": "MemberCommittee_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberCommitteeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Create a new member committee.",
        "operationId": "MemberCommittee_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberCommitteeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercommittee/{id}": {
      "get": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Get a member committee.",
        "operationId": "MemberCommittee_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCommitteeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Update a member committee.",
        "operationId": "MemberCommittee_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberCommitteeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Delete a member committee.",
        "operationId": "MemberCommittee_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercommittee/export": {
      "post": {
        "tags": [
          "MemberCommittee"
        ],
        "summary": "Export member committees.",
        "operationId": "MemberCommittee_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMemberCommitteesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercomponentprogress/{id}": {
      "get": {
        "tags": [
          "MemberComponentProgress"
        ],
        "summary": "Get a list of CE component progress records for the current biennium a given member Id.",
        "operationId": "MemberComponentProgress_GetList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberComponentProgressDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member/search": {
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "Search members using available filters.",
        "operationId": "Member_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMembersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get a list of all members.",
        "operationId": "Member_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "Create a new member.",
        "operationId": "Member_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member/details": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get a list of all members with details.",
        "operationId": "Member_GetListWithDetails",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberWithDetailsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member/details/{id}": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get a members with details.",
        "operationId": "Member_GetWithDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberWithDetailsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member/{id}": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get a member.",
        "operationId": "Member_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Member"
        ],
        "summary": "Update a member.",
        "operationId": "Member_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Member"
        ],
        "summary": "Delete a member.",
        "operationId": "Member_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/member/export": {
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "Export members.",
        "operationId": "Member_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMembersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membercourseprogress/{id}": {
      "get": {
        "tags": [
          "MemberCourseProgress"
        ],
        "summary": "Get a list of course progress records for a given member Id. You can specify the 'Cache-Control: no-cache' header to bypass cache.",
        "operationId": "MemberCourseProgress_GetList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the member.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "Cache-Control",
            "x-originalName": "noCache",
            "in": "header",
            "description": "A flag to bypass cache if 'no-cache' is set.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "A list of MemberCourseProgressDto instances.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberCourseProgressDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/memberlocalboard/search": {
      "post": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Search member local boards using available filters.",
        "operationId": "MemberLocalBoard_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemberLocalBoardsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberLocalBoardDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/memberlocalboard": {
      "get": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Get a list of all member local boards.",
        "operationId": "MemberLocalBoard_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberLocalBoardDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Create a new member local board.",
        "operationId": "MemberLocalBoard_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberLocalBoardRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/memberlocalboard/{id}": {
      "get": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Get a member local board.",
        "operationId": "MemberLocalBoard_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLocalBoardDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Update a member local board.",
        "operationId": "MemberLocalBoard_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberLocalBoardRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Delete a member local board.",
        "operationId": "MemberLocalBoard_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/memberlocalboard/export": {
      "post": {
        "tags": [
          "MemberLocalBoard"
        ],
        "summary": "Export member local boards.",
        "operationId": "MemberLocalBoard_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMemberLocalBoardsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membersubscription/search": {
      "post": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Search member subscriptions using available filters.",
        "operationId": "MemberSubscription_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemberSubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membersubscription": {
      "get": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Get a list of all member subscriptions.",
        "operationId": "MemberSubscription_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberSubscriptionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Create a new member subscription.",
        "operationId": "MemberSubscription_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membersubscription/{id}": {
      "get": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Get a member subscription.",
        "operationId": "MemberSubscription_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Update a member subscription.",
        "operationId": "MemberSubscription_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Delete a member subscription.",
        "operationId": "MemberSubscription_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membersubscription/export": {
      "post": {
        "tags": [
          "MemberSubscription"
        ],
        "summary": "Export member subscriptions.",
        "operationId": "MemberSubscription_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMemberSubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertype/search": {
      "post": {
        "tags": [
          "MemberType"
        ],
        "summary": "Search member types using available filters.",
        "operationId": "MemberType_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemberTypesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertype": {
      "get": {
        "tags": [
          "MemberType"
        ],
        "summary": "Get a list of all member types.",
        "operationId": "MemberType_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberTypeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "MemberType"
        ],
        "summary": "Create a new member type.",
        "operationId": "MemberType_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertype/{id}": {
      "get": {
        "tags": [
          "MemberType"
        ],
        "summary": "Get a member type.",
        "operationId": "MemberType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "MemberType"
        ],
        "summary": "Update a member type.",
        "operationId": "MemberType_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MemberType"
        ],
        "summary": "Delete a member type.",
        "operationId": "MemberType_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertype/export": {
      "post": {
        "tags": [
          "MemberType"
        ],
        "summary": "Export member types.",
        "operationId": "MemberType_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMemberTypesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertypemapping/search": {
      "post": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Search member type mappings using available filters.",
        "operationId": "MemberTypeMapping_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemberTypeMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfMemberTypeMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertypemapping": {
      "get": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Get a list of all member type mappings.",
        "operationId": "MemberTypeMapping_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberTypeMappingDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Create a new member type mapping.",
        "operationId": "MemberTypeMapping_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberTypeMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertypemapping/{id}": {
      "get": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Get a member type mapping.",
        "operationId": "MemberTypeMapping_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberTypeMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Update a member type mapping.",
        "operationId": "MemberTypeMapping_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberTypeMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Delete a member type mapping.",
        "operationId": "MemberTypeMapping_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/membertypemapping/export": {
      "post": {
        "tags": [
          "MemberTypeMapping"
        ],
        "summary": "Export member types mappings.",
        "operationId": "MemberTypeMapping_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMemberTypeMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productcategory/search": {
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Search product categories using available filters.",
        "operationId": "ProductCategory_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductCategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productcategory": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get a list of all product categories.",
        "operationId": "ProductCategory_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Create a new product category.",
        "operationId": "ProductCategory_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productcategory/{id}": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get a product category.",
        "operationId": "ProductCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Update a product category.",
        "operationId": "ProductCategory_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Delete a product category.",
        "operationId": "ProductCategory_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productcategory/dapper/{id}": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get product categories via dapper.",
        "operationId": "ProductCategory_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productcategory/export": {
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Export product categories.",
        "operationId": "ProductCategory_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductCategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/product/search": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Search products using available filters.",
        "operationId": "Product_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a list of all products.",
        "operationId": "Product_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product.",
        "operationId": "Product_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a product.",
        "operationId": "Product_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product.",
        "operationId": "Product_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product.",
        "operationId": "Product_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/product/dapper": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get products via dapper.",
        "operationId": "Product_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/product/export": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Export products.",
        "operationId": "Product_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productmapping/search": {
      "post": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Search product mappings using available filters.",
        "operationId": "ProductMapping_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productmapping": {
      "get": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Get a list of all product mappings.",
        "operationId": "ProductMapping_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductMappingDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Create a new product mapping.",
        "operationId": "ProductMapping_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productmapping/{id}": {
      "get": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Get a product mapping.",
        "operationId": "ProductMapping_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Update a product mapping.",
        "operationId": "ProductMapping_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Delete a product mapping.",
        "operationId": "ProductMapping_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productmapping/dapper": {
      "get": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Get product mappings via dapper.",
        "operationId": "ProductMapping_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productmapping/export": {
      "post": {
        "tags": [
          "ProductMapping"
        ],
        "summary": "Export product mappings.",
        "operationId": "ProductMapping_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstage/search": {
      "post": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Search product stages using available filters.",
        "operationId": "ProductStage_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductStagesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductStageDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstage": {
      "get": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Get a list of all product stages.",
        "operationId": "ProductStage_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStageDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Create a new product stage.",
        "operationId": "ProductStage_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductStageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstage/{id}": {
      "get": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Get a product stage.",
        "operationId": "ProductStage_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStageDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Update a product stage.",
        "operationId": "ProductStage_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductStageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Delete a product stage.",
        "operationId": "ProductStage_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstage/dapper": {
      "get": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Get product stages via dapper.",
        "operationId": "ProductStage_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStageDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstage/export": {
      "post": {
        "tags": [
          "ProductStage"
        ],
        "summary": "Export product stages.",
        "operationId": "ProductStage_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductStagesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedule/search": {
      "post": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Search product stage schedules using available filters.",
        "operationId": "ProductStageSchedule_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductStageSchedulesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductStageScheduleDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedule": {
      "get": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Get a list of all product stage schedules.",
        "operationId": "ProductStageSchedule_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStageScheduleDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Create a new product stage schedule.",
        "operationId": "ProductStageSchedule_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductStageScheduleRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedule/{id}": {
      "get": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Get a product stage schedule.",
        "operationId": "ProductStageSchedule_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStageScheduleDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Update a product stage schedule.",
        "operationId": "ProductStageSchedule_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductStageScheduleRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Delete a product stage schedule.",
        "operationId": "ProductStageSchedule_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedule/export": {
      "post": {
        "tags": [
          "ProductStageSchedule"
        ],
        "summary": "Export product stage schedules.",
        "operationId": "ProductStageSchedule_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductStageSchedulesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedulemapping/search": {
      "post": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Search product stage schedule mappings using available filters.",
        "operationId": "ProductStageScheduleMapping_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductStageScheduleMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductStageScheduleMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedulemapping": {
      "get": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Get a list of all product stage schedule mappings.",
        "operationId": "ProductStageScheduleMapping_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStageScheduleMappingDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Create a new product stage schedule mapping.",
        "operationId": "ProductStageScheduleMapping_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductStageScheduleMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedulemapping/{id}": {
      "get": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Get a product stage schedule mapping.",
        "operationId": "ProductStageScheduleMapping_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStageScheduleMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Update a product stage schedule mapping.",
        "operationId": "ProductStageScheduleMapping_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductStageScheduleMappingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Delete a product stage schedule mapping.",
        "operationId": "ProductStageScheduleMapping_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productstageschedulemapping/export": {
      "post": {
        "tags": [
          "ProductStageScheduleMapping"
        ],
        "summary": "Export product stage schedule mappings.",
        "operationId": "ProductStageScheduleMapping_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductStageScheduleMappingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productsubcategory/search": {
      "post": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Search product subcategories using available filters.",
        "operationId": "ProductSubcategory_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductSubcategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductSubcategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productsubcategory": {
      "get": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Get a list of all product subcategories.",
        "operationId": "ProductSubcategory_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubcategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Create a new product subcategory.",
        "operationId": "ProductSubcategory_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductSubcategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productsubcategory/{id}": {
      "get": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Get a product subcategory.",
        "operationId": "ProductSubcategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Update a product subcategory.",
        "operationId": "ProductSubcategory_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductSubcategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Delete a product subcategory.",
        "operationId": "ProductSubcategory_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productsubcategory/dapper": {
      "get": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Get product subcategories via dapper.",
        "operationId": "ProductSubcategory_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSubcategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/productsubcategory/export": {
      "post": {
        "tags": [
          "ProductSubcategory"
        ],
        "summary": "Export product subcategories.",
        "operationId": "ProductSubcategory_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductSubcategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttaxonomy/search": {
      "post": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Search product taxonomies using available filters.",
        "operationId": "ProductTaxonomy_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductTaxonomiesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductTaxonomyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttaxonomy": {
      "get": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Get a list of all product taxonomies.",
        "operationId": "ProductTaxonomy_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTaxonomyDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Create a new product taxonomy.",
        "operationId": "ProductTaxonomy_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductTaxonomyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttaxonomy/{id}": {
      "get": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Get a product taxonomy.",
        "operationId": "ProductTaxonomy_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTaxonomyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Update a product taxonomy.",
        "operationId": "ProductTaxonomy_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductTaxonomyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Delete a product taxonomy.",
        "operationId": "ProductTaxonomy_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttaxonomy/dapper": {
      "get": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Get product taxonomies via dapper.",
        "operationId": "ProductTaxonomy_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTaxonomyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttaxonomy/export": {
      "post": {
        "tags": [
          "ProductTaxonomy"
        ],
        "summary": "Export product taxonomies.",
        "operationId": "ProductTaxonomy_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductTaxonomiesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttype/search": {
      "post": {
        "tags": [
          "ProductType"
        ],
        "summary": "Search product types using available filters.",
        "operationId": "ProductType_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductTypesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfProductTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttype": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "summary": "Get a list of all product types.",
        "operationId": "ProductType_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTypeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductType"
        ],
        "summary": "Create a new product type.",
        "operationId": "ProductType_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttype/{id}": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "summary": "Get a product type.",
        "operationId": "ProductType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "ProductType"
        ],
        "summary": "Update a product type.",
        "operationId": "ProductType_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductType"
        ],
        "summary": "Delete a product type.",
        "operationId": "ProductType_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttype/dapper": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "summary": "Get a product type via dapper.",
        "operationId": "ProductType_GetDapper",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/producttype/export": {
      "post": {
        "tags": [
          "ProductType"
        ],
        "summary": "Export product types.",
        "operationId": "ProductType_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportProductTypesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/salestaxcategory/search": {
      "post": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Search sales tax categories using available filters.",
        "operationId": "SalesTaxCategory_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSalesTaxCategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfSalesTaxCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/salestaxcategory": {
      "get": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Get a list of all sales tax categories.",
        "operationId": "SalesTaxCategory_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesTaxCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Create a new sales tax category.",
        "operationId": "SalesTaxCategory_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSalesTaxCategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/salestaxcategory/{id}": {
      "get": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Get a sales tax category.",
        "operationId": "SalesTaxCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesTaxCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Update a sales tax category.",
        "operationId": "SalesTaxCategory_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSalesTaxCategoryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Delete a sales tax category.",
        "operationId": "SalesTaxCategory_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/salestaxcategory/export": {
      "post": {
        "tags": [
          "SalesTaxCategory"
        ],
        "summary": "Export sales tax categories.",
        "operationId": "SalesTaxCategory_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportSalesTaxCategoriesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/subscription/search": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Search subscriptions using available filters.",
        "operationId": "Subscription_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/subscription": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get a list of all subscriptions.",
        "operationId": "Subscription_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a new subscription.",
        "operationId": "Subscription_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/subscription/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get subscription.",
        "operationId": "Subscription_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update a subscription.",
        "operationId": "Subscription_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete a subscription.",
        "operationId": "Subscription_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/subscription/export": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Export subscriptions.",
        "operationId": "Subscription_Export",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportSubscriptionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-API-KEY": []
          },
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authUserInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthUser"
              }
            ]
          },
          "success": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "format": "guid"
          },
          "tokenExpires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "failedAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "isEmailUnique": {
            "type": "boolean"
          },
          "isLockedOut": {
            "type": "boolean"
          },
          "lastFailedAttempt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "userContextIds": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AuthUserRole"
            }
          }
        }
      },
      "AuthUserRole": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "contextName": {
            "type": "string",
            "nullable": true
          },
          "isMember": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "description": "Member Login Request.",
        "additionalProperties": false,
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Memebership Username.",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "description": "Memebership Password.",
            "minLength": 1
          },
          "ipAddress": {
            "type": "string",
            "description": "Request IP Address."
          },
          "userAgent": {
            "type": "string",
            "description": "Request User Agent."
          },
          "installId": {
            "type": "string",
            "description": "Requesting Application Install Id."
          }
        }
      },
      "Member": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "brokerEmail": {
            "type": "string",
            "nullable": true
          },
          "brokerFullName": {
            "type": "string",
            "nullable": true
          },
          "canUseHotline": {
            "type": "boolean"
          },
          "cellPhone": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyLogoUrl": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companySubscriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionInfo"
            }
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fairhavenDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "joinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastFirst": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "localBoards": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocalBoard"
            }
          },
          "mandatoryHotlineLetter": {
            "type": "boolean"
          },
          "memberType": {
            "type": "string",
            "nullable": true
          },
          "minnesotaLicense": {
            "type": "string",
            "nullable": true
          },
          "myLocalBoard": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocalBoard"
              }
            ]
          },
          "nrdsId": {
            "type": "string",
            "nullable": true
          },
          "paidThruDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "stateProvince": {
            "type": "string",
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionInfo"
            }
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "workPhone": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubscriptionInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "goodThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LocalBoard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "chapter": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "localBoardName": {
            "type": "string",
            "nullable": true
          },
          "rosterOptIn": {
            "type": "boolean"
          },
          "rosterOptInDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ProductData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eventInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventData"
              }
            ]
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "memberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "nonMemberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EventData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "beginDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "instructorName": {
            "type": "string",
            "nullable": true
          },
          "meetingBeginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "meetingDescription": {
            "type": "string",
            "nullable": true
          },
          "meetingEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "meetingName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "subscriberId": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "callbackUrl": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "refreshTokenExpiryTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ErrorResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "errorId": {
            "type": "string",
            "nullable": true
          },
          "supportMessage": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "PaginationResponseOfCommitteeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommitteeDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CommitteeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "committeeCode": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDto"
            }
          }
        }
      },
      "MemberDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "iMISId": {
            "type": "string"
          },
          "nrdsId": {
            "type": "string"
          },
          "commonId": {
            "type": "integer",
            "format": "int32"
          },
          "passwordHash": {
            "type": "string"
          },
          "passwordSalt": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "lastFirst": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "stateProvince": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "marketingEmail": {
            "type": "string"
          },
          "brokerFullName": {
            "type": "string"
          },
          "brokerEmail": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "cellPhone": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "mandatoryHotlineLetter": {
            "type": "boolean"
          },
          "canUseHotline": {
            "type": "boolean"
          },
          "fax": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "minnesotaLicense": {
            "type": "string"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyLogoUrl": {
            "type": "string"
          },
          "memberTypeId": {
            "type": "string",
            "format": "guid"
          },
          "memberTypeCode": {
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "guid"
          },
          "companyName": {
            "type": "string"
          },
          "primaryLocalBoardId": {
            "type": "string",
            "format": "guid"
          },
          "primaryLocalBoardChapter": {
            "type": "string"
          },
          "primaryLocalBoardName": {
            "type": "string"
          },
          "localBoards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalBoardDto"
            }
          },
          "paidThruDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fairhavenDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "LocalBoardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "chapter": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rosterOptIn": {
            "type": "boolean"
          },
          "rosterOptInDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchCommitteesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "orderBy": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BaseFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "advancedSearch": {
            "description": "Column Wise Search is Supported.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Search"
              }
            ]
          },
          "keyword": {
            "type": "string",
            "description": "Keyword to Search in All the available columns of the Resource.",
            "nullable": true
          },
          "advancedFilter": {
            "description": "Advanced column filtering with logical operators and query operators is supported.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Filter"
              }
            ]
          }
        }
      },
      "Search": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keyword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logic": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        }
      },
      "CreateCommitteeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "committeeCode"
        ],
        "properties": {
          "committeeCode": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "title": {
            "type": "string"
          }
        }
      },
      "UpdateCommitteeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "committeeCode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "committeeCode": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ExportCommitteesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfCompanyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CompanyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "iMISId": {
            "type": "string"
          },
          "organizationCode": {
            "type": "string"
          },
          "memberTypeId": {
            "type": "string",
            "format": "guid"
          },
          "memberType": {
            "type": "string"
          },
          "memberTypeDescription": {
            "type": "string"
          },
          "isMember": {
            "type": "boolean"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          }
        }
      },
      "SearchCompaniesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateCompanyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "iMISId",
          "organizationCode"
        ],
        "properties": {
          "iMISId": {
            "type": "string",
            "maxLength": 10,
            "minLength": 1,
            "nullable": false
          },
          "organizationCode": {
            "type": "string",
            "maxLength": 10,
            "minLength": 1,
            "nullable": false
          },
          "memberTypeId": {
            "type": "string",
            "format": "guid"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          }
        }
      },
      "UpdateCompanyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "organizationCode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "iMISId": {
            "type": "string"
          },
          "organizationCode": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1,
            "nullable": false
          },
          "memberTypeId": {
            "type": "string",
            "format": "guid"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          }
        }
      },
      "ExportCompaniesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfCompanySubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySubscriptionDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CompanySubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "companyId": {
            "type": "string",
            "format": "guid"
          },
          "companyEmail": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productSku": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchCompanySubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateCompanySubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isMemberCompanySubscription"
        ],
        "properties": {
          "companyId": {
            "type": "string",
            "format": "guid"
          },
          "isMemberCompanySubscription": {
            "type": "boolean",
            "minLength": 1,
            "nullable": false
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UpdateCompanySubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExportCompanySubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfDiscountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "DiscountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "sku": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchDiscountsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateDiscountRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "title": {
            "type": "string"
          },
          "discountRule": {
            "type": "string"
          }
        }
      },
      "UpdateDiscountRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string"
          },
          "discountRule": {
            "type": "string"
          }
        }
      },
      "ExportDiscountsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfLocalBoardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalBoardDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchLocalBoardsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateLocalBoardRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "chapter"
        ],
        "properties": {
          "chapter": {
            "type": "string",
            "maxLength": 10,
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string"
          },
          "rosterOptIn": {
            "type": "boolean"
          },
          "rosterOptInDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UpdateLocalBoardRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "chapter"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "chapter": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string"
          },
          "rosterOptIn": {
            "type": "boolean"
          },
          "rosterOptInDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExportLocalBoardsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfMemberCommitteeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberCommitteeDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "MemberCommitteeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "memberEmail": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productSku": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchMemberCommitteesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateMemberCommitteeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "committeeId"
        ],
        "properties": {
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "committeeId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateMemberCommitteeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "committeeId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "committeeId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ExportMemberCommitteesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "MemberComponentProgressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "iMISId": {
            "type": "string"
          },
          "program": {
            "type": "string"
          },
          "component": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "goodThruDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "certificateSequence": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "credentialHolderId": {
            "type": "string",
            "nullable": true
          },
          "courseLauncherUrl": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "unitsRequired": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitsEarned": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sortSequence": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginationResponseOfMemberDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchMembersRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "MemberWithDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "iMISId": {
            "type": "string"
          },
          "nrdsId": {
            "type": "string"
          },
          "commonId": {
            "type": "integer",
            "format": "int32"
          },
          "passwordHash": {
            "type": "string"
          },
          "passwordSalt": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "lastFirst": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "stateProvince": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "marketingEmail": {
            "type": "string"
          },
          "brokerFullName": {
            "type": "string"
          },
          "brokerEmail": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "cellPhone": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "mandatoryHotlineLetter": {
            "type": "boolean"
          },
          "canUseHotline": {
            "type": "boolean"
          },
          "fax": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "minnesotaLicense": {
            "type": "string"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyLogoUrl": {
            "type": "string"
          },
          "memberTypeId": {
            "type": "string",
            "format": "guid"
          },
          "memberTypeCode": {
            "type": "string"
          },
          "memberType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberTypeDto"
              }
            ]
          },
          "companyId": {
            "type": "string",
            "format": "guid"
          },
          "companyName": {
            "type": "string"
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompanyDto"
              }
            ]
          },
          "primaryLocalBoardId": {
            "type": "string",
            "format": "guid"
          },
          "primaryLocalBoardChapter": {
            "type": "string"
          },
          "primaryLocalBoard": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocalBoardDto"
              }
            ]
          },
          "primaryLocalBoardName": {
            "type": "string"
          },
          "localBoards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalBoardDto"
            }
          },
          "paidThruDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fairhavenDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "memberSubscriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberSubscriptionDto"
            }
          },
          "companySubscriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CompanySubscriptionDto"
            }
          },
          "committees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberCommitteeDto"
            }
          }
        }
      },
      "MemberTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isMember": {
            "type": "boolean"
          }
        }
      },
      "MemberSubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "memberEmail": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productSku": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateMemberRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "hash": {
            "type": "string"
          },
          "salt": {
            "type": "string"
          }
        }
      },
      "UpdateMemberRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ExportMembersRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "MemberCourseProgressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "memberIsAdmin": {
            "type": "boolean"
          },
          "adminId": {
            "type": "string",
            "format": "guid"
          },
          "courseId": {
            "type": "string",
            "format": "guid"
          },
          "courseToken": {
            "type": "string",
            "format": "guid"
          },
          "courseType": {
            "type": "string"
          },
          "isExamOnly": {
            "type": "boolean"
          },
          "courseHasCertificate": {
            "type": "boolean"
          },
          "trackPercentComplete": {
            "type": "number",
            "format": "decimal"
          },
          "courseGroupId": {
            "type": "string",
            "format": "guid"
          },
          "courseGroupTitle": {
            "type": "string"
          },
          "courseGroupSortSequence": {
            "type": "integer",
            "format": "int32"
          },
          "courseTitle": {
            "type": "string"
          },
          "courseSubtitle": {
            "type": "string"
          },
          "courseDescription": {
            "type": "string"
          },
          "courseSortSequence": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalGoodThroughDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "goodThroughDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "percentComplete": {
            "type": "number",
            "format": "decimal"
          },
          "completed": {
            "type": "boolean"
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "certificateSequence": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isExtendable": {
            "type": "boolean"
          },
          "extensionWindow": {
            "type": "integer",
            "format": "int32"
          },
          "extensionDays": {
            "type": "integer",
            "format": "int32"
          },
          "extensionProductCode": {
            "type": "string",
            "nullable": true
          },
          "externalRequirements": {
            "type": "string",
            "nullable": true
          },
          "notificationMessage": {
            "type": "string",
            "nullable": true
          },
          "notificationColor": {
            "type": "string",
            "nullable": true
          },
          "notificationSort": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginationResponseOfMemberLocalBoardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberLocalBoardDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "MemberLocalBoardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "localBoardId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SearchMemberLocalBoardsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateMemberLocalBoardRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "memberId"
        ],
        "properties": {
          "memberId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "localBoardId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UpdateMemberLocalBoardRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "memberId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "localBoardId": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ExportMemberLocalBoardsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfMemberSubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberSubscriptionDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchMemberSubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateMemberSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId"
        ],
        "properties": {
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UpdateMemberSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberId": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExportMemberSubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfMemberTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberTypeDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchMemberTypesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateMemberTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string"
          },
          "isMember": {
            "type": "boolean"
          }
        }
      },
      "UpdateMemberTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isMember": {
            "type": "boolean"
          }
        }
      },
      "ExportMemberTypesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfMemberTypeMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberTypeMappingDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "MemberTypeMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberTypeCode": {
            "type": "string"
          },
          "newMemberTypeCode": {
            "type": "string"
          }
        }
      },
      "SearchMemberTypeMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateMemberTypeMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "memberTypeCode"
        ],
        "properties": {
          "memberTypeCode": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "newMemberTypeCode": {
            "type": "string"
          }
        }
      },
      "UpdateMemberTypeMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "memberTypeCode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "memberTypeCode": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "newMemberTypeCode": {
            "type": "string"
          }
        }
      },
      "ExportMemberTypeMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "productTypeName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchProductCategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductCategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductCategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductCategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string"
          },
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "productTypeName": {
            "type": "string"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryName": {
            "type": "string"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryName": {
            "type": "string"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "salesTaxCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "salesTaxCategoryName": {
            "type": "string"
          },
          "salesTaxCategoryCode": {
            "type": "string"
          },
          "productTaxonomyName": {
            "type": "string",
            "nullable": true
          },
          "memberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "nonMemberPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string"
          },
          "isTaxable": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "productStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productStages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStageDto"
            }
          }
        }
      },
      "ProductStageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SearchProductsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sku",
          "name"
        ],
        "properties": {
          "sku": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          },
          "memberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "nonMemberPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sku",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "sku": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "memberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "nonMemberPrice": {
            "type": "number",
            "format": "decimal"
          },
          "isTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMappingDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productCode": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SearchProductMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sku",
          "productCode"
        ],
        "properties": {
          "sku": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "productCode": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid"
          },
          "isTaxable": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sku",
          "productCode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "sku": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "productCode": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productSubcategoryId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "productTaxonomyId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductStageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStageDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchProductStagesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductStageRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UpdateProductStageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExportProductStagesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductStageScheduleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStageScheduleDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductStageScheduleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productStageId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchProductStageSchedulesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductStageScheduleRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId",
          "stageId"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "stageId": {
            "type": "integer",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateProductStageScheduleRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "stageId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExportProductStageSchedulesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductStageScheduleMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStageScheduleMappingDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductStageScheduleMappingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productMappingId": {
            "type": "string",
            "format": "guid"
          },
          "productStageId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SearchProductStageScheduleMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductStageScheduleMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productMappingId": {
            "type": "string",
            "format": "guid"
          },
          "productStageId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateProductStageScheduleMappingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "productStageId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExportProductStageScheduleMappingsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductSubcategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubcategoryDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductSubcategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryId": {
            "type": "string",
            "format": "guid"
          },
          "productCategoryName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchProductSubcategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductSubcategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductSubcategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductSubcategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductTaxonomyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTaxonomyDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductTaxonomyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchProductTaxonomiesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductTaxonomyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "productTypeId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductTaxonomyRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductTaxonomiesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfProductTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTypeDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ProductTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchProductTypesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateProductTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExportProductTypesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfSalesTaxCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesTaxCategoryDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SalesTaxCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SearchSalesTaxCategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateSalesTaxCategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "code"
        ],
        "properties": {
          "salesTaxTypeId": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "code": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateSalesTaxCategoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 75,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ExportSalesTaxCategoriesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PaginationResponseOfSubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Product": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sku": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "memberPrice": {
                "type": "number",
                "format": "decimal"
              },
              "nonMemberPrice": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "productTypeId": {
                "type": "string",
                "format": "guid"
              },
              "productType": {
                "$ref": "#/components/schemas/ProductType"
              },
              "productCategoryId": {
                "type": "string",
                "format": "guid"
              },
              "productCategory": {
                "$ref": "#/components/schemas/ProductCategory"
              },
              "productSubcategoryId": {
                "type": "string",
                "format": "guid"
              },
              "productSubcategory": {
                "$ref": "#/components/schemas/ProductSubcategory"
              },
              "productTaxonomyId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "productTaxonomy": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductTaxonomy"
                  }
                ]
              },
              "productQuantityId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "productQuantity": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductQuantity"
                  }
                ]
              },
              "productMappingId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "productMapping": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductMapping"
                  }
                ]
              },
              "salesTaxCategoryId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "salesTaxCategory": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SalesTaxCategory"
                  }
                ]
              },
              "productTags": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductTag"
                }
              },
              "productStageSchedules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductStageSchedule"
                }
              },
              "isTaxable": {
                "type": "boolean"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "eventStartDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "eventEndDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "location": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ProductType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "productCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        ]
      },
      "ProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "productTypeId": {
                "type": "string",
                "format": "guid"
              },
              "productType": {
                "$ref": "#/components/schemas/ProductType"
              },
              "subcategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubcategory"
                }
              }
            }
          }
        ]
      },
      "ProductSubcategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "productCategoryId": {
                "type": "string",
                "format": "guid"
              },
              "productCategory": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          }
        ]
      },
      "AuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntityOfGuid"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "AuditableEntityOfGuid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntityOfGuid"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "createdBy": {
                "type": "string",
                "format": "guid"
              },
              "createdOn": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "type": "string",
                "format": "guid"
              },
              "lastModifiedOn": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deletedOn": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "deletedBy": {
                "type": "string",
                "format": "guid",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseEntityOfGuid": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainEvent"
            }
          }
        }
      },
      "DomainEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "triggeredOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductTaxonomy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ProductQuantity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "defaultQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "stepSize": {
                "type": "integer",
                "format": "int32"
              },
              "max": {
                "type": "integer",
                "format": "int32"
              },
              "min": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ProductMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "productCode": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "productId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "product": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Product"
                  }
                ]
              },
              "productTypeId": {
                "type": "string",
                "format": "guid"
              },
              "productType": {
                "$ref": "#/components/schemas/ProductType"
              },
              "productCategoryId": {
                "type": "string",
                "format": "guid"
              },
              "productCategory": {
                "$ref": "#/components/schemas/ProductCategory"
              },
              "productSubcategoryId": {
                "type": "string",
                "format": "guid"
              },
              "productSubcategory": {
                "$ref": "#/components/schemas/ProductSubcategory"
              },
              "productTaxonomyId": {
                "type": "string",
                "format": "guid"
              },
              "productTaxonomy": {
                "$ref": "#/components/schemas/ProductTaxonomy"
              },
              "salesTaxCategoryId": {
                "type": "string",
                "format": "guid",
                "nullable": true
              },
              "salesTaxCategory": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SalesTaxCategory"
                  }
                ]
              },
              "productStageScheduleMappings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductStageScheduleMapping"
                }
              }
            }
          }
        ]
      },
      "SalesTaxCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        ]
      },
      "ProductStageScheduleMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "productMappingId": {
                "type": "string",
                "format": "guid"
              },
              "productMapping": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductMapping"
                  }
                ]
              },
              "productStageId": {
                "type": "integer",
                "format": "int32"
              },
              "productStage": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductStage"
                  }
                ]
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "ProductStage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "productStageSchedules": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ProductStageSchedule"
                }
              }
            }
          }
        ]
      },
      "ProductStageSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "productId": {
                "type": "string",
                "format": "guid"
              },
              "product": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Product"
                  }
                ]
              },
              "productStageId": {
                "type": "integer",
                "format": "int32"
              },
              "productStage": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductStage"
                  }
                ]
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntityOfGuid"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "ProductTag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchSubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isMemberSubscription"
        ],
        "properties": {
          "ownerId": {
            "type": "string",
            "format": "guid"
          },
          "isMemberSubscription": {
            "type": "boolean",
            "minLength": 1,
            "nullable": false
          },
          "productId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UpdateSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "productId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "status": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date-time"
          },
          "paidThru": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "continuousSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExportSubscriptionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      }
    },
    "securitySchemes": {
      "X-API-KEY": {
        "type": "apiKey",
        "description": "X-API-KEY",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  }
}
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using System.Text.RegularExpressions
@using Azure.Core;
@using Umbraco.Cms.Core.Models
@using Microsoft.AspNetCore.Http
@using Umbraco.Forms.Web
@using Umbraco.Cms.Core.Security;

@inject IMemberManager _membermanager

@{
    MemberIdentityUser currentMember = await _membermanager.GetCurrentMemberAsync();

    var settings = Umbraco.ContentAtRoot().FirstOrDefault(x => x.ContentType.Alias == "siteSettings");

    IPublishedContent home = Umbraco.ContentAtRoot()?.Where(pc => pc.Name == "Home")?.FirstOrDefault();

    string alertTimestamp = String.Format("{0:Mdyyyyhmmss}", settings?.Value("timestamp"));//convert to string to write a cookie via data attributes
    int alertExpDays = settings?.Value<int>("expirationDays") ?? 0; //strongly typed int for exp dates, though will be converted to string on FE
}

<!doctype html>
<html lang="en-US">
@await Html.PartialAsync("_header")
@RenderSection("head", required: false)
@RenderSection("styles", required: false)
<body class="page-template-@Model.ContentType.Alias page-id-@Model.Id">

    @Html.Raw(settings?.Value("bodyOpenScripts"))
    <a class="visually-hidden-focusable" href="#content">Skip to content</a>
    
    @if (settings.HasValue("enableMessage") && settings.Value<bool>("enableMessage") && (Context.Request.Cookies["wra_alert_banner"] != alertTimestamp))
    {
        <div id="site-alert" class="site-alert" data-timestamp="@alertTimestamp" data-expiration="@alertExpDays">
            <div class="container py-2 h-100 d-flex flex-row align-items-center justify-content-center">
                <div class="rich-text">
                    @Html.Raw(settings?.Value("message"))
                </div>
                <button aria-controls="site-alert" class="js-alert-close btn-close border-0 bg-transparent px-4 h-100 self-end"><span class="visually-hidden">>Close</span><i class="fal fa-times text-white"></i></button>
            </div>
        </div>
    }

    <header class="site-header js-header site-header--show-on-scroll-up site-header--top">
        <button class="site-header__nav-toggle js-nav-toggle d-lg-none px-2 text-body" aria-controls="mobile-nav" aria-expanded="false" aria-label="Toggle navigation">
            <i class="fa fa-bars"></i>
            <i class="fal fa-times"></i>
        </button>
        <div class="site-header__container">
            <div class="site-header__top">
                <div class="container d-lg-flex flex-column h-100">
                    <div class="site-header__top-inner d-flex flex-row align-items-center justify-content-between h-100">
                        <a class="site-header__logo text-decoration-none" href="/">
                            <img src="@(settings?.Value<IPublishedContent>("headerLogo")?.Url())" class="w-100" alt="@(settings?.Value<IPublishedContent>("headerLogo")?.Value("altText"))" />
                        </a>
                        
                        @{
                            var utilityNavMenu = settings?.Value<IEnumerable<Link>>("utilityNavMenu");

                            if (utilityNavMenu.Any())
                            {
                                <ul class="nav-utility list-unstyled m-0 gap-4 d-none d-lg-flex flex-row align-items-center font-family-3 fw-light ms-auto me-4">
                                    @foreach (var link in utilityNavMenu)
                                    {
                                        <li>
                                            <a href="@link?.Url" target="@link?.Target">
                                                <span>@link?.Name</span>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }
                        }

                        @* <a href="/login" class="btn btn-primary btn-sm d-none d-lg-block">Login</a> *@
                        <partial name="_loginButton" model=@currentMember />
                        
                        <button class="js-header__search-overlay-toggle site-header__mobile-utility d-lg-none ms-auto" aria-label="Site Search">
                            <i class="fa fa-search"></i>
                        </button>
                        <a href="/cart/" class="site-header__mobile-utility me-n2 d-lg-none" aria-label="Cart">
                            <div class="position-relative">
                                <i class="far fa-shopping-cart"></i>
                                @(await Component.InvokeAsync("CartCount", new { homePage = home }))
                            </div>
                        </a>
                    </div>
                </div>

            </div>
            <div class="site-header__bottom">
                <div class="container h-100">
                    <nav id="desktop-nav" class="js-nav-main nav-main h-100 d-none d-lg-flex flex-row" aria-label="Desktop Navigation">
                        <ul class="list-unstyled m-0 d-flex flex-row align-items-center justify-content-between font-family-3 h-100 flex-grow-1" style="padding-right: 4%">
                        @* MEGA MENU ITERATIONS // assumes only 6 mega menus *@
                        @for (int i = 1; i <= 6; i++)
                        {
                                @if (!String.IsNullOrEmpty(settings?.Value<string>($"navMenu{i}Name")?.ToString()) && !String.IsNullOrEmpty(settings?.Value<string>($"navMenu{i}Link")?.ToString()))
                            {
                                var link = settings.Value<Link>($"navMenu{i}Link");
                                var safeId = Regex.Replace($"navMenu{i}Name", "[^a-zA-Z0-9-]+", "");

                                <li>
                                    @if (link != null)
                                    {
                                        <a href="@link?.Url" class="js-nav-item" role="tab" aria-selected="false" aria-controls="panel@(safeId)" target="@link?.Target">@settings.Value($"navMenu{i}Name")</a>
                                    }
                                    <div id="panel@(safeId)" class="is-hidden js-nav-sub-menu sub-menu py-5 py-lg-7 fs-sm font-family-1" role=tabpanel>
                                        <div class="container position-relative">
                                            <button class="js-sub-menu-close btn-close border-0">Close <i class="fal fa-times"></i></button>
                                            <div class="row">
                                                <div class="col-4 m-0 pt-lg-3">
                                                    <span class="h2 d-block">@settings.Value($"navMenu{i}Name")</span>
                                                    @if (settings.HasValue($"navMenu{i}IntroCopy"))
                                                    {     
                                                        <p>@settings.Value($"navMenu{i}IntroCopy")</p>
                                                    }
                                                    @if (settings.HasValue($"navMenu{i}Image"))
                                                    {
                                                        <img src="@(settings?.Value<IPublishedContent>($"navMenu{i}Image")?.GetCropUrl(width: 350, furtherOptions: "&format=WebP"))" srcset="@(settings?.Value<IPublishedContent>($"navMenu{i}Image")?.GetCropUrl(width: 700, furtherOptions: "&format=WebP")) 2x" alt="@(settings?.Value<IPublishedContent>($"navMenu{i}Image")?.Value("altText"))" class="img-curved img-fluid" loading="lazy">
                                                    }
                                                    @if (!String.IsNullOrWhiteSpace(link.Name))
                                                    {
                                                        <a href="@link?.Url" class="btn btn-primary mt-4" target="@link?.Target">@link?.Name</a>
                                                    }
                                                </div>
                                                @if (!String.IsNullOrEmpty(settings?.Value<string>($"navMenu{i}Column1")?.ToString()))
                                                {
                                                    var content = settings.Value($"navMenu{i}Column1");
                                                        <div class="col-4 m-0 pt-lg-3">
                                                        @await Html.PartialAsync("blockgrid/blank", content)
                                                    </div>
                                                }
                                                @if (!String.IsNullOrEmpty(settings?.Value<string>($"navMenu{i}Column2")?.ToString()))
                                                {
                                                    var content = settings.Value($"navMenu{i}Column2");
                                                    <div class="col-4 m-0 pt-lg-3">
                                                            @await Html.PartialAsync("blockgrid/blank", content)
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                        </ul>
                        <button class="js-header__search-overlay-toggle site-header__utility d-none d-lg-block ms-auto bg-transparent border-0 px-3 fs-lg" aria-label="Site Search">
                            <i class="fa fa-search"></i>
                        </button>
                        <a href="/cart/" class="site-header__utility d-none d-lg-flex align-items-center ms-auto bg-transparent border-0 px-3 fs-lg" aria-label="Cart">
                            <div class="position-relative">
                                <i class="far fa-shopping-cart"></i>
                                @(await Component.InvokeAsync("CartCount", new { homePage = home }))
                            </div>
                        </a>
                    </nav>
                </div>

                <nav id="mobile-nav" class="nav-main-mobile d-lg-none" aria-label="Mobile Navigation">
                    <div class="nav-main-mobile__header d-flex fle-row justify-content-between align-items-center w-100">
                        <span class="h2 d-block mx-auto my-0 fs-xs">Main Menu</span>
                    </div>
                    <div class="container my-4">
                        <a href="/login" class="btn btn-primary btn-lg w-100">Login</a>
                    </div>
                    <ul class="list-unstyled m-0 px-4 d-flex flex-column gap-0">

                        @* MOBILE MENU ITERATIONS // assumes only 5 menus *@
                        @for (int i = 1; i <= 5; i++)
                        {
                            @if (settings.HasValue($"navMenu{i}Name") && settings.HasValue($"navMenu{i}Link"))
                            {
                                var link = settings.Value<Link>($"navMenu{i}Link");
                                var safeId = Regex.Replace($"navMenuMobile{i}Name", "[^a-zA-Z0-9-]+", "");

                                <li>
                                        
                                    @if (link != null)
                                    {
                                        <button class="js-nav-mobile-item border-0 w-100 d-flex flex-row justify-content-between align-items-center bg-transparent" role="tab" aria-selected="false" aria-controls="mobilePanel@(safeId)" target="@link?.Target"><span>@settings.Value($"navMenu{i}Name")</span> <i class="fa fa-chevron-right text-primary"></i></button>
                                    }

                                    <div id="mobilePanel@(safeId)" class="is-hidden js-nav-mobile-sub-menu sub-menu-mobile" role=tabpanel>

                                        <div class="sub-menu-mobile__header d-flex fle-row justify-content-between align-items-center w-100">
                                            <button class="js-sub-menu-mobile-back btn-close border-0" title="Close"><i class="fa fa-chevron-left"></i></button>
                                            <span class="h2 d-block mx-auto my-0 fs-xs pe-5">@settings.Value($"navMenu{i}Name")</span>
                                        </div>
                                        <div class="container my-4 container my-4 gap-1 d-flex flex-column">

                                            @if (!String.IsNullOrWhiteSpace(link.Name))
                                            {
                                                <div class="sub-menu__item">
                                                    <a href="@link?.Url" class="btn btn-link-arrow btn-link-arrow--primary" target="@link?.Target">
                                                        @link?.Name
                                                        <svg width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M1 11H16.8889" stroke="#2560B9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            <path d="M12 5.5L17.5 11L12 16.5" stroke="#2560B9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                        </svg>
                                                    </a>
                                                </div>
                                            }

                                            @if (settings.HasValue($"navMenu{i}Column1"))
                                            {
                                                ViewBag.MobileConfig = true;
                                                var content = settings.Value($"navMenu{i}Column1");
                                                @await Html.PartialAsync("blockgrid/blank", content)
                                            }
                                            @if (settings.HasValue($"navMenu{i}Column2"))
                                            {
                                                var content = settings.Value($"navMenu{i}Column2");
                                                @await Html.PartialAsync("blockgrid/blank", content)
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                    </ul>

                    
                    @{
                        var utilityNavMenuMobile = settings?.Value<IEnumerable<Link>>("utilityNavMenu");

                        if (utilityNavMenuMobile.Any())
                        {
                            <div class="container my-4 pt-5 border-top border-dark">
                                <div class="row mobile-nav-utility gy-5 pt-5">
                                    @foreach (var link in utilityNavMenuMobile)
                                    {
                                        <div class="col-6 m-0">
                                            <a href="@link?.Url" class="btn btn-secondary btn-mobile w-100 btn-sm" target="@link?.Target">
                                                <span>@link?.Name</span>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                </nav>

            </div>
        </div>

        <div id="search-overlay" class="site-header__search-overlay js-header__search-overlay" aria-hidden="true">
            <div class="container d-flex align-items-center gap-2" style="max-width:508px">
                <form role="search" method="get" action="/search" class="site-header__search flex-grow-1 overflow-hidden">
                    <div class="d-flex flex-row align-items-center"> 
                        <label class="visually-hidden" for="header-search-input">Search</label> 
                        <input type="search" id="header-search-input" class="js-header-search site-header__search-input form-control border-0" name="q" placeholder="Search" required=""> 
                        <button type="submit" class="site-header__search-button bg-transparent border-0 px-3 py-2 fs-xl" aria-label="Search">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </form> 
                <button type="button" class="flex-shrink-0 js-header__search-overlay-close bg-transparent border-0" aria-label="Close search">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x" aria-hidden="true"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg> 
                </button>
            </div>
        </div>

    </header>

    <main id="content" class="js-site-main site-main overflow-hidden @ViewBag.MainCss">
        <span class="nav-overlay"></span>
        @RenderBody()
    </main>

    @await Html.PartialAsync("_footer")

    @RenderSection("scriptsPre", required: false)
    <script src="https://cdn.jsdelivr.net/npm/@@event-calendar/build@2.6.1/event-calendar.min.js"></script>
    <script src="/js/dist/global.js" asp-append-version="true"></script>
    @RenderSection("scripts", required: false)
    @Html.Raw(settings?.Value("bodyCloseScripts"))
</body>
</html>
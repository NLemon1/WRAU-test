@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using System.Text.RegularExpressions
@using Azure.Core;
@using Umbraco.Cms.Core.Models
@using Microsoft.AspNetCore.Http
@using Umbraco.Forms.Web
@using Umbraco.Cms.Core.Security;
@inject IMemberManager _membermanager

@{
    MemberIdentityUser currentMember = await _membermanager.GetCurrentMemberAsync();

    var settings = Umbraco.ContentAtRoot().FirstOrDefault(x => x.ContentType.Alias == "siteSettings");
    IPublishedContent home = Umbraco.ContentAtRoot().Where(pc => pc.Name == "Home").FirstOrDefault();
    string metaTitle = Model.HasValue("metaTitle") ? Model.Value<string>("metaTitle") : Model.Name + " | " + settings.Value("siteName");
    string metaDescription = Model.HasValue("metaDescription") ? Model.Value<string>("metaDescription") : "";
    string logoStyle = "";

    if (settings.HasValue("logoWidth"))
    {
        logoStyle += $"--logo-width:{settings.Value("logoWidth")}px;";
    }

    if (settings.HasValue("mobileLogoWidth"))
    {
        logoStyle += $"--logo-mobile-width:{settings.Value("mobileLogoWidth")}px;";
    }

    if (settings.HasValue("footerLogoWidth"))
    {
        logoStyle += $"--footer-logo-width:{settings.Value("footerLogoWidth")}px;";
    }

    if (settings.HasValue("footerLogoMobileWidth"))
    {
        logoStyle += $"--footer-logo-mobile-width:{settings.Value("footerLogoMobileWidth")}px;";
    }

    var alertTimestamp = @settings.Value("timestamp").ToString().ToLower().Replace(" ", "").Replace("/", "").Replace(":", "").Replace("am", "").Replace("pm", "");
    var alertExpDays = @settings.Value("expirationDays").ToString();


}

<!doctype html>
<html lang="en-US">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@metaTitle</title>
    <meta name="description" content="@metaDescription">
    @if (Model.HasValue("openGraphImage"))
    {
        <meta property="og:image" content="@(Model.Value<IPublishedContent>("openGraphImage").Url(mode:UrlMode.Absolute))">
    }
    else if (settings.HasValue("oGImageFallback"))
    {
        <meta property="og:image" content="@(settings.Value<IPublishedContent>("oGImageFallback").Url(mode:UrlMode.Absolute))">
    }
    <link rel="icon" href="~/favicon.ico" sizes="32x32" />
    <link rel="icon" href="~/icon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="~/apple-touch-icon.png" />
    <link rel="manifest" href="~/manifest.webmanifest" />
    <link rel="dns-prefetch" href="//cdnjs.cloudflare.com" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    @RenderSection("head", required: false)
    <script src="https://kit.fontawesome.com/ee0cbe98db.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Poppins:ital,wght@0,400;0,500;0,600;0,800;1,400;1,500;1,600;1,800&family=Roboto+Serif:ital,opsz,wght@0,8..144,400;1,8..144,400&display=swap" rel="stylesheet">
    <style> html { @logoStyle } </style>
    <link href="/css/dist/global.css" rel="stylesheet" asp-append-version="true">
    @RenderSection("styles", required: false)


    @Html.RenderUmbracoFormDependencies(Url)
    @Html.Raw(settings.Value("headScripts"))

</head>
<body class="page-template-@Model.ContentType.Alias page-id-@Model.Id">

    @Html.Raw(settings.Value("bodyOpenScripts"))
    <a class="visually-hidden-focusable" href="#content">Skip to content</a>
    
    @if (settings.HasValue("enableMessage") && settings.Value<bool>("enableMessage") && (Context.Request.Cookies["wra_alert_banner"] != alertTimestamp))
    {
        <div id="site-alert" class="site-alert" data-timestamp="@alertTimestamp" data-expiration="@alertExpDays">
            <div class="container py-2 h-100 d-flex flex-row align-items-center justify-content-center">
                <div class="rich-text">
                    @Html.Raw(settings.Value("message"))
                </div>
                <button aria-controls="site-alert" class="js-alert-close btn-close border-0 bg-transparent px-4 h-100 self-end"><span class="visually-hidden">>Close</span><i class="fal fa-times text-white"></i></button>
            </div>
        </div>
    }

    <header class="site-header js-header site-header--show-on-scroll-up site-header--top">
        <button class="site-header__nav-toggle js-nav-toggle d-lg-none px-2 text-body" aria-controls="mobile-nav" aria-expanded="false" aria-label="Toggle navigation">
            <i class="fa fa-bars"></i>
            <i class="fal fa-times"></i>
        </button>
        <div class="site-header__container">
            <div class="site-header__top">
                <div class="container d-lg-flex flex-column h-100">
                    <div class="site-header__top-inner d-flex flex-row align-items-center justify-content-between h-100">
                        <a class="site-header__logo text-decoration-none" href="/">
                            <img src="@(settings.Value<IPublishedContent>("headerLogo").Url())" class="w-100" alt="@(settings.Value<IPublishedContent>("headerLogo").Value("altText"))" />
                        </a>
                        @if (settings.HasValue("utilityNavMenu"))
                        {
                            var utilityNavMenu = settings.Value<IEnumerable<Link>>("utilityNavMenu");
                            <ul class="nav-utility list-unstyled m-0 gap-4 d-none d-lg-flex flex-row align-items-center font-family-3 fw-light ms-auto me-4">
                                @foreach (var link in utilityNavMenu)
                                {
                                    <li>
                                        <a href="@link.Url" target="@link.Target">
                                            <span>@link.Name</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        @* <a href="/login" class="btn btn-primary btn-sm d-none d-lg-block">Login</a> *@
                        <partial name="_loginButton" model=@currentMember />
                        
                        <button class="js-header__search-overlay-toggle site-header__mobile-utility d-lg-none ms-auto" aria-label="Site Search">
                            <i class="fa fa-search"></i>
                        </button>
                        <a href="/cart/" class="site-header__mobile-utility me-n2 d-lg-none" aria-label="Cart">
                            <div class="position-relative">
                                <i class="far fa-shopping-cart"></i>
                                @(await Component.InvokeAsync("CartCount", new { homePage = home }))
                            </div>
                        </a>
                    </div>
                </div>

            </div>
            <div class="site-header__bottom">
                <div class="container h-100">
                    <nav id="desktop-nav" class="js-nav-main nav-main h-100 d-none d-lg-flex flex-row" aria-label="Desktop Navigation">
                        <ul class="list-unstyled m-0 d-flex flex-row align-items-center justify-content-between font-family-3 h-100 flex-grow-1" style="padding-right: 4%">
                        @* MEGA MENU ITERATIONS // assumes only 6 mega menus *@
                        @for (int i = 1; i <= 6; i++)
                        {
                            @if (settings.HasValue($"navMenu{i}Name") && settings.HasValue($"navMenu{i}Link"))
                            {
                                var link = settings.Value<Link>($"navMenu{i}Link");
                                var safeId = Regex.Replace($"navMenu{i}Name", "[^a-zA-Z0-9-]+", "");

                                <li>
                                    @if (link != null)
                                    {
                                        <a href="@link.Url" class="js-nav-item" role="tab" aria-selected="false" aria-controls="panel@(safeId)" target="@link.Target">@settings.Value($"navMenu{i}Name")</a>
                                    }
                                    <div id="panel@(safeId)" class="is-hidden js-nav-sub-menu sub-menu py-5 py-lg-7 fs-sm font-family-1" role=tabpanel>
                                        <div class="container position-relative">
                                            <button class="js-sub-menu-close btn-close border-0">Close <i class="fal fa-times"></i></button>
                                            <div class="row">
                                                <div class="col-4 m-0 pt-lg-3">
                                                    <span class="h2 d-block">@settings.Value($"navMenu{i}Name")</span>
                                                    @if (settings.HasValue($"navMenu{i}IntroCopy"))
                                                    {     
                                                        <p>@settings.Value($"navMenu{i}IntroCopy")</p>
                                                    }
                                                    @if (settings.HasValue($"navMenu{i}Image"))
                                                    {
                                                        <img src="@(settings.Value<IPublishedContent>($"navMenu{i}Image").GetCropUrl(width: 350, furtherOptions: "&format=WebP"))" srcset="@(settings.Value<IPublishedContent>($"navMenu{i}Image").GetCropUrl(width: 700, furtherOptions: "&format=WebP")) 2x" alt="@(settings.Value<IPublishedContent>($"navMenu{i}Image").Value("altText"))" class="img-curved img-fluid" loading="lazy">
                                                    }
                                                    @if (!String.IsNullOrWhiteSpace(link.Name))
                                                    {
                                                        <a href="@link.Url" class="btn btn-primary mt-4" target="@link.Target">@link.Name</a>
                                                    }
                                                </div>
                                                @if (settings.HasValue($"navMenu{i}Column1"))
                                                {
                                                    var content = settings.Value($"navMenu{i}Column1");
                                                        <div class="col-4 m-0 pt-lg-3">
                                                        @await Html.PartialAsync("blockgrid/blank", content)
                                                    </div>
                                                }
                                                @if (settings.HasValue($"navMenu{i}Column2"))
                                                {
                                                    var content = settings.Value($"navMenu{i}Column2");
                                                    <div class="col-4 m-0 pt-lg-3">
                                                            @await Html.PartialAsync("blockgrid/blank", content)
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                        </ul>
                        <button class="js-header__search-overlay-toggle site-header__utility d-none d-lg-block ms-auto bg-transparent border-0 px-3 fs-lg" aria-label="Site Search">
                            <i class="fa fa-search"></i>
                        </button>
                        <a href="/cart/" class="site-header__utility d-none d-lg-flex align-items-center ms-auto bg-transparent border-0 px-3 fs-lg" aria-label="Cart">
                            <div class="position-relative">
                                <i class="far fa-shopping-cart"></i>
                                @(await Component.InvokeAsync("CartCount", new { homePage = home }))
                            </div>
                        </a>
                    </nav>
                </div>

                <nav id="mobile-nav" class="nav-main-mobile d-lg-none" aria-label="Mobile Navigation">
                    <div class="nav-main-mobile__header d-flex fle-row justify-content-between align-items-center w-100">
                        <span class="h2 d-block mx-auto my-0 fs-xs">Main Menu</span>
                    </div>
                    <div class="container my-4">
                        <a href="/login" class="btn btn-primary btn-lg w-100">Login</a>
                    </div>
                    <ul class="list-unstyled m-0 px-4 d-flex flex-column gap-0">

                        @* MOBILE MENU ITERATIONS // assumes only 5 menus *@
                        @for (int i = 1; i <= 5; i++)
                        {
                            @if (settings.HasValue($"navMenu{i}Name") && settings.HasValue($"navMenu{i}Link"))
                            {
                                var link = settings.Value<Link>($"navMenu{i}Link");
                                var safeId = Regex.Replace($"navMenuMobile{i}Name", "[^a-zA-Z0-9-]+", "");

                                <li>
                                        
                                    @if (link != null)
                                    {
                                        <button class="js-nav-mobile-item border-0 w-100 d-flex flex-row justify-content-between align-items-center bg-transparent" role="tab" aria-selected="false" aria-controls="mobilePanel@(safeId)" target="@link.Target"><span>@settings.Value($"navMenu{i}Name")</span> <i class="fa fa-chevron-right text-primary"></i></button>
                                    }

                                    <div id="mobilePanel@(safeId)" class="is-hidden js-nav-mobile-sub-menu sub-menu-mobile" role=tabpanel>

                                        <div class="sub-menu-mobile__header d-flex fle-row justify-content-between align-items-center w-100">
                                            <button class="js-sub-menu-mobile-back btn-close border-0" title="Close"><i class="fa fa-chevron-left"></i></button>
                                            <span class="h2 d-block mx-auto my-0 fs-xs pe-5">@settings.Value($"navMenu{i}Name")</span>
                                        </div>
                                        <div class="container my-4 container my-4 gap-1 d-flex flex-column">

                                            @if (!String.IsNullOrWhiteSpace(link.Name))
                                            {
                                                <div class="sub-menu__item">
                                                    <a href="@link.Url" class="btn btn-link-arrow btn-link-arrow--primary" target="@link.Target">
                                                        @link.Name
                                                        <svg width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M1 11H16.8889" stroke="#2560B9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            <path d="M12 5.5L17.5 11L12 16.5" stroke="#2560B9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                        </svg>
                                                    </a>
                                                </div>
                                            }

                                            @if (settings.HasValue($"navMenu{i}Column1"))
                                            {
                                                ViewBag.MobileConfig = true;
                                                var content = settings.Value($"navMenu{i}Column1");
                                                @await Html.PartialAsync("blockgrid/blank", content)
                                            }
                                            @if (settings.HasValue($"navMenu{i}Column2"))
                                            {
                                                var content = settings.Value($"navMenu{i}Column2");
                                                @await Html.PartialAsync("blockgrid/blank", content)
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                    </ul>

                    @if (settings.HasValue("utilityNavMenu"))
                    {
                        var utilityNavMenu = settings.Value<IEnumerable<Link>>("utilityNavMenu");
                        <div class="container my-4 pt-5 border-top border-dark">
                            <div class="row mobile-nav-utility gy-5 pt-5">
                                @foreach (var link in utilityNavMenu)
                                {
                                    <div class="col-6 m-0">
                                        <a href="@link.Url" class="btn btn-secondary btn-mobile w-100 btn-sm" target="@link.Target">
                                            <span>@link.Name</span>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </nav>

            </div>
        </div>

        <div id="search-overlay" class="site-header__search-overlay js-header__search-overlay" aria-hidden="true">
            <div class="container d-flex align-items-center gap-2" style="max-width:508px">
                <form role="search" method="get" action="/" class="site-header__search flex-grow-1 overflow-hidden">
                    <div class="d-flex flex-row align-items-center"> 
                        <label class="visually-hidden" for="header-search-input">Search</label> 
                        <input type="search" id="header-search-input" class="js-header-search site-header__search-input form-control border-0" name="s" placeholder="Search" required=""> 
                        <button type="submit" class="site-header__search-button bg-transparent border-0 px-3 py-2 fs-xl" aria-label="Search">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </form> 
                <button type="button" class="flex-shrink-0 js-header__search-overlay-close bg-transparent border-0" aria-label="Close search">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x" aria-hidden="true"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg> 
                </button>
            </div>
        </div>

    </header>

    <main id="content" class="js-site-main site-main overflow-hidden @ViewBag.MainCss">
        <span class="nav-overlay"></span>
        @RenderBody()
    </main>

    <footer class="site-footer">
        @{
            IPublishedContent siteFooterWidget = Model.Value<IPublishedContent>("siteFooterWidget");

            if (siteFooterWidget != null)
            {
                <div class="site-footer__widget-area pb-4 pb-lg-7">
                    <div class="container">
                        <div class="row gx-5 mt-0 text-center">
                            @if (siteFooterWidget.ContentType.Alias == "oneColumnSiteFooterWidget")
                            {
                                var colorSchemeClasses = "bg-light";
                                var colorSchemeBtnClasses = "btn-primary";
                                var colorScheme = siteFooterWidget.Value<string>("colorScheme");
                                var link = siteFooterWidget.Value<Link>("link");

                                if (colorScheme == "Dark Blue")
                                {
                                    colorSchemeClasses = "bg-secondary text-white";
                                    colorSchemeBtnClasses = "btn-light";
                                }

                                <div class="col-12 mt-0">
                                    <div class="site-footer__widget px-6 py-7 @colorSchemeClasses">
                                        <div class="container container--sm">
                                            <h2 class="h3">@siteFooterWidget.Value("heading")</h2>
                                            @if (siteFooterWidget.HasValue("content"))
                                            {
                                                @Html.Raw(siteFooterWidget.Value("content"))
                                            }
                                            <a class="btn @colorSchemeBtnClasses mt-2" href="@link.Url" target="@link.Target">@link.Name</a>
                                        </div>
                                    </div>
                                </div>
                            }
                            else if (siteFooterWidget.ContentType.Alias == "twoColumnSiteFooterWidget")
                            {
                                var col1ColorSchemeClasses = "bg-light";
                                var col1ColorSchemeBtnClasses = "btn-primary";
                                var col1ColorScheme = siteFooterWidget.Value<string>("col1ColorScheme");
                                var col2ColorSchemeClasses = "bg-light";
                                var col2ColorSchemeBtnClasses = "btn-primary";
                                var col2ColorScheme = siteFooterWidget.Value<string>("col2ColorScheme");
                                var col1Link = siteFooterWidget.Value<Link>("col1Link");
                                var col2Link = siteFooterWidget.Value<Link>("col2Link");

                                if (col1ColorScheme == "Dark Blue")
                                {
                                    col1ColorSchemeClasses = "bg-secondary text-white";
                                    col1ColorSchemeBtnClasses = "btn-light";
                                }

                                if (col2ColorScheme == "Dark Blue")
                                {
                                    col2ColorSchemeClasses = "bg-secondary text-white";
                                    col2ColorSchemeBtnClasses = "btn-light";
                                }

                                <div class="col-12 col-md-6 mt-0 mb-4 mb-lg-0">
                                    <div class="site-footer__widget px-6 py-7 @col1ColorSchemeClasses">
                                        <h2 class="h3">@siteFooterWidget.Value("col1Heading")</h2>
                                        @if (siteFooterWidget.HasValue("col1Content"))
                                        {
                                            @Html.Raw(siteFooterWidget.Value("col1Content"))
                                        }
                                        <a class="btn @col1ColorSchemeBtnClasses mt-2" href="@col1Link.Url" target="@col1Link.Target">@col1Link.Name</a>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6 mt-0">
                                    <div class="site-footer__widget px-6 py-7 @col2ColorSchemeClasses">
                                        <h2 class="h3">@siteFooterWidget.Value("col2Heading")</h2>
                                        @if (siteFooterWidget.HasValue("col2Content"))
                                        {
                                            @Html.Raw(siteFooterWidget.Value("col2Content"))
                                        }
                                        <a class="btn @col2ColorSchemeBtnClasses mt-2" href="@col2Link.Url" target="@col2Link.Target">@col2Link.Name</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        <div class="py-7 bg-dark overflow-hidden">
            <div class="container">
                <div class="row text-white" style="font-family: Poppins, sans-serif;">
                    <div class="col-12 col-lg-4 mt-0">
                        <div class="mb-5">
                            <h3 class="h4">WRA Headquarters</h3>
                            <address class="mb-0">
                                @settings.Value("hqAddress")@(settings.HasValue("hqSuite") ? ", " + settings.Value("hqSuite") : "")<br>
                                @settings.Value("hqCity"), @settings.Value("hqState") @settings.Value("hqZip")
                            </address>
                            @if (settings.HasValue("hqHours"))
                            {
                                @settings.Value("hqHours")<br>
                            }
                            @if (settings.HasValue("hqPhone"))
                            {
                                <a href="tel:@settings.Value("hqPhone")">@settings.Value("hqPhone")</a><br>
                            }
                            @if (settings.HasValue("hqPhone2"))
                            {
                                <a href="tel:@settings.Value("hqPhone2")">@settings.Value("hqPhone2")</a><br>
                            }
                            @if (settings.HasValue("hqEmail"))
                            {
                                <a href="mailto:@settings.Value("hqEmail")">@settings.Value("hqEmail")</a>
                            }
                        </div>
                        <div class="mb-5">
                            <h3 class="h4">WRA Public Affairs Office</h3>
                            <address class="mb-0">
                                @settings.Value("paAddress")@(settings.HasValue("paSuite") ? ", " + settings.Value("paSuite") : "")<br>
                                @settings.Value("paCity"), @settings.Value("paState") @settings.Value("paZip")
                            </address>
                            @if (settings.HasValue("paHours"))
                            {
                                @settings.Value("paHours")<br>
                            }
                            @if (settings.HasValue("paPhone"))
                            {
                                <a href="tel:@settings.Value("paPhone")">@settings.Value("paPhone")</a><br>
                            }
                            @if (settings.HasValue("paPhone2"))
                            {
                                <a href="tel:@settings.Value("paPhone2")">@settings.Value("paPhone2")</a><br>
                            }
                            @if (settings.HasValue("paEmail"))
                            {
                                <a href="mailto:@settings.Value("paEmail")">@settings.Value("paEmail")</a>
                            }
                        </div>
                    </div>
                    <div class="col-12 col-lg-4 mt-0">
                        <div class="mb-5">
                            @{
                                var footerLinks = settings.Value<IEnumerable<Link>>("footerNavigation");
                            
                                if (footerLinks.Any())
                                {
                                    <nav class="mb-2" aria-label="Site footer navigation">
                                        <ul class="list-unstyled">
                                            @foreach (var link in footerLinks)
                                            {
                                                <li class="pb-3">
                                                    <a href="@link.Url" target="@link.Target">@link.Name</a>
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                }
                            }
                        
                            <h3 class="h4">Follow Us</h3>
                            <ul class="d-inline-flex gap-3 list-unstyled">
                                @if (settings.HasValue("facebook"))
                                {
                                    <li>
                                        <a href="@settings.Value("facebook")" target="_blank">
                                            <i class="fab fa-facebook-f fa-lg"></i>
                                            <span class="visually-hidden">Facebook</span>
                                        </a>
                                    </li>
                                }
                                @if (settings.HasValue("youtube"))
                                {
                                    <li>
                                        <a href="@settings.Value("youtube")" target="_blank">
                                            <i class="fab fa-youtube fa-lg"></i>
                                            <span class="visually-hidden">YouTube</span>
                                        </a>
                                    </li>
                                }
                                @if (settings.HasValue("twitter"))
                                {
                                    <li>
                                        <a href="@settings.Value("twitter")" target="_blank">
                                            <i class="fa-brands fa-x-twitter fa-lg"></i>
                                            <span class="visually-hidden">Twitter</span>
                                        </a>
                                    </li>
                                }
                                @if (settings.HasValue("instagram"))
                                {
                                    <li>
                                        <a href="@settings.Value("instagram")" target="_blank">
                                            <i class="fab fa-instagram fa-lg"></i>
                                            <span class="visually-hidden">Instagram</span>
                                        </a>
                                    </li>
                                }
                                @if (settings.HasValue("linkedin"))
                                {
                                    <li>
                                        <a href="@settings.Value("linkedin")" target="_blank">
                                            <i class="fab fa-linkedin-in fa-lg"></i>
                                            <span class="visually-hidden">LinkedIn</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col-12 col-lg-4 mt-0">
                        <h3 class="h4">Legal Hotline</h3>
                        @if (settings.HasValue("lhNotes"))
                        {
                            <p class="my-2">@settings.Value("lhNotes")</p>
                        }
                        <a href="tel:@settings.Value("lhPhone")">@settings.Value("lhPhone")</a><br>
                        @if (settings.HasValue("lhPhone2"))
                        {
                            <a href="tel:@settings.Value("lhPhone2")">@settings.Value("lhPhone2")</a><br>
                        }
                        @if (settings.HasValue("lhHours"))
                        {
                            <p class="my-2">@settings.Value("lhHours")</p>
                        }
                    </div>
                </div>
                <div class="site-footer__bottom mt-5 pt-3 text-white">
                    <a class="site-footer__logo mb-3 mb-lg-0" href="/">
                        <img src="@(settings?.Value<IPublishedContent>("footerLogo")?.Url() ?? string.Empty)" class="w-100" alt="@(settings?.Value<IPublishedContent>("footerLogo")?.Value("altText") ?? string.Empty)" />
                    </a>
                    <p class="mb-lg-0">&copy; @DateTime.Now.Year @settings?.Value("siteName"). All Rights Reserved.</p>
                    @{
                        var footerUtilityLinks = settings?.Value<IEnumerable<Link>>("footerUtilityNavigation") ?? [];

                        if (footerUtilityLinks != null && footerUtilityLinks.Any())
                        {
                            <nav aria-label="Site footer utility navigation">
                                <ul class="site-footer__utility-links list-unstyled mb-0">
                                    @foreach (var link in footerUtilityLinks)
                                    {
                                        <li>
                                            <a href="@link.Url" target="@link.Target">@link.Name</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                </div>
            </div>
        </div>
    </footer>

    @RenderSection("scriptsPre", required: false)
    <script src="https://cdn.jsdelivr.net/npm/@@event-calendar/build@2.6.1/event-calendar.min.js"></script>
    <script src="/js/dist/global.js" asp-append-version="true"></script>
    @RenderSection("scripts", required: false)
    @Html.Raw(settings?.Value("bodyCloseScripts"))
</body>
</html>
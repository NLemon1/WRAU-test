
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ProductCategoryLanding>
@using ContentModels = WRA.Umbraco.Models;
@using Umbraco.Cms.Core.Models.Blocks
@using System.Text.RegularExpressions;
@using WRA.Umbraco.Web.Helpers


@{
    Layout = "~/Views/_Layout.cshtml";
    var content = (ContentModels.ProductCategoryLanding)Model;
    var sections = Model.Value<IEnumerable<BlockGridItem>>("sections");

    var productType = content.Value<IEnumerable<IPublishedContent>>("productType");
    var singleType = productType.FirstOrDefault().Name;

    IEnumerable<IPublishedContent> productGroups = Model.Value<IEnumerable<IPublishedContent>>("categoriesSubcategories").Where(x => x.IsVisible()).OrderBy(p => p.Name);
}

<header class="page-header page-header--no-accent">
    <div class="container">
        <div class="container--sm">
            <h1 class="mb-0">@Model.Name</h1>
        </div>
    </div>
</header>

<div class="text-bg-secondary">
    <div class="py-5">
        @await Html.PartialAsync("_breadcrumbsProducts", new ViewDataDictionary(this.ViewData) { { "CssClass", "breadcrumbs--light" } })
    </div>
</div>

@await Html.PartialAsync("blockgrid/default", sections)


<div class="container my-4 my-lg-6">
    <div class="row g-4">

        @foreach (var productGroup in productGroups)
        {
            //check if a Category OR SubCatgery(pair with parent Category)

            var setParameters = string.Empty;

            if (productGroup.GetType().Name == "SubCategoryPage")
            {
                setParameters = "/products/products?ref=" + @Model.Name + "&type=" + @singleType + "&category=" + @productGroup.Parent.Name + "&subcategory=" + @productGroup.Name;
            } else
            {
                setParameters = "/products/products?ref=" + @Model.Name + "&type=" + @singleType + "&category=" + @productGroup.Name + "&subcategory=All";
            }

            <div class="col-md-4">
                <div class="block-mini-card mini-card p-2 p-md-4 pb-lg-0 d-flex flex-column">
                    <h3 class="mini-card__headline h5 mb-4 px-2 px-md-0 pt-4 pt-md-0">@productGroup.Name</h3>
                    @if (productGroup.HasProperty("description"))
                    {
                        <p class="px-2 px-md-0">@productGroup.GetProperty("description").GetValue()</p>
                    }
                    <a href="@setParameters" class="mini-card__link fs-normal mt-auto stretched-link text-decoration-none fw-bold">
                        Views Offerings
                        <svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M0.82077 8L12.0313 8" stroke="#2560B9" stroke-width="1.37143" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M8.51727 4L12.5173 8L8.51727 12" stroke="#2560B9" stroke-width="1.37143" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </a>
                </div>
            </div>
        }
    </div>
</div>
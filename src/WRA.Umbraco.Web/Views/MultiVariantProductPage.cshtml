@using Umbraco.Commerce.Core.Models;
@using Umbraco.Commerce;
@using Umbraco.Commerce.Extensions;
@using Umbraco.Cms.Core.Models.PublishedContent;
@using WRA.Umbraco;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.MultiVariantProductPage>
@using ContentModels = WRA.Umbraco.Models;
@{
	Layout = null;
}
@{
    var multiVariantProductPage = Model as MultiVariantProductPage;
    var store = Model.Value<StoreReadOnly>("store", fallback: Fallback.ToAncestors);
    var addedProductReference = TempData["addedProductReference"]?.ToString();
    var parentPages = Model.Ancestors().Reverse();
}

<h1>SINGLE VARIANT PRODUCT PAGE</h1>

@if (multiVariantProductPage != null && multiVariantProductPage.Variants != null && multiVariantProductPage.Variants.Count > 0)
{
    <script>

        // Create JS function to update variant info dynamically
        var updateProductVariantInfo = function () {

            // Convert selected values into a key value collection
            var attributeValues = Array.from($("select[data-attribute]")).reduce(function (accumulator, currentValue) {
                accumulator[currentValue.dataset.attribute] = currentValue.value;
                return accumulator;
            }, {});

            // Construct the post data to pass to the API controller
            var postData = {
                productNodeId: @Model.Id,
                attributes: attributeValues
            }

            // Disable the add to cart button while loading
            $("#add-to-cart").prop('disabled', true).css({ opacity: 0.2 });

            // Fetch the variant data for the given attribute combination and update the UI accordingly
            $.ajax({
                url: "/umbraco/api/productapi/getproductvariant",
                type: "POST",
                data: JSON.stringify(postData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data) {
                        $("[data-variant-price]").text(data.priceFormatted);
                        $("[name=productVariantReference]").val(data.productVariantReference);
                        $(".product-image").attr("src", data.imageUrl);
                        $("#add-to-cart").prop('disabled', false).css({ opacity: 1 });
                    } else {
                        $("[data-variant-price]").text("Unavailable");
                        $("[name=productVariantReference]").val("");
                        $(".product-image").attr("src", $(".product-image").data("defaultUrl"));
                    }
                }
            });

            return false;
        }

        // Update variant info on load
        updateProductVariantInfo();

    </script>
}

<div class="py-3">
    <partial name="Breadcrumbs" />
</div>

<div class="container">
    <div class="row gx-lg-12">
        <div class="col-12 col-lg-6 mb-6 mb-lg-0">
            <img class="img-fluid img-curved img-curved--large" src="https://placehold.it/552" alt="" />
        </div>
        <div class="col-12 col-lg-6">
            <p class="mb-4 fs-xs">Bundle <span class="ms-3 fw-semibold">Credit Hours: 18</span></p>

            <p class="d-inline-block mb-2 px-2 py-1 bg-light fw-semibold text-uppercase">On Demand</p>

            @using (Html.BeginUmbracoForm("AddToCart", "CartSurface"))
            {
                <h1 class="h3">@Model.Name</h1>

                <div class="my-4" style="color: #696f78;">
                    <span class="h3 text-body">$000</span> member pricing
                    <br />$000 non-member pricing
                </div>

                RenderVariants(store, Model, addedProductReference);

                <button id="add-to-cart" class="btn btn-primary mb-6" type="submit">Add to Cart</button>
            }

            @if (Model.HasValue("longDescription"))
            {
                Html.Raw(Model.Value("longDescription"));
            }
        </div>
    </div>

    <div style="height: 64px;"></div>

    <div class="tabs tabs--mobile-dropdown tabs--vertical js-tabs">
        <div class="">
            <ul role="tablist" class="tabs__tabs-list">
                <li role="presentation">
                    <a id="tab-1" class="tabs__trigger js-tabs-trigger" href="#tab-section-1" role="tab" aria-controls="tab-section-1" aria-selected="false">Program Curriculum</a>
                </li>
                <li role="presentation">
                    <a id="tab-2" class="tabs__trigger js-tabs-trigger" href="#tab-section-2" role="tab" aria-controls="tab-section-2" aria-selected="false">Required Courses</a>
                </li>
                <li role="presentation">
                    <a id="tab-3" class="tabs__trigger js-tabs-trigger" href="#tab-section-3" role="tab" aria-controls="tab-section-3" aria-selected="false">Elective Courses</a>
                </li>
                <li role="presentation">
                    <a id="tab-4" class="tabs__trigger js-tabs-trigger" href="#tab-section-4" role="tab" aria-controls="tab-section-4" aria-selected="false">Licensing Requirements</a>
                </li>
                <li role="presentation">
                    <a id="tab-5" class="tabs__trigger js-tabs-trigger" href="#tab-section-5" role="tab" aria-controls="tab-section-5" aria-selected="false">Pricing</a>
                </li>
                <li role="presentation">
                    <a id="tab-6" class="tabs__trigger js-tabs-trigger" href="#tab-section-6" role="tab" aria-controls="tab-section-6" aria-selected="false">FAQs</a>
                </li>
            </ul>
        </div>
        <select class="tabs__dropdown js-tabs-dropdown" aria-label="Select a tab">
            <option value="#tab-section-1">Program Requirements</option>
            <option value="#tab-section-2">Required Courses</option>
            <option value="#tab-section-3">Elective Courses</option>
            <option value="#tab-section-4">Licensing Requirements</option>
            <option value="#tab-section-5">Pricing</option>
            <option value="#tab-section-6">FAQs</option>
        </select>
        <section id="tab-section-1" class="tabs__panel px-4 js-tabs-panel" role="tabpanel" aria-labelledby="tab-1" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-1" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 1 content
            </div>
        </section>
        <section id="tab-section-2" class="tabs__panel px-4 js-tabs-panel" role="tabpanel" aria-labelledby="tab-2" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-2" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 2 content
            </div>
        </section>
        <section id="tab-section-3" class="tabs__panel px-4 js-tabs-panel" role="tabpanel" aria-labelledby="tab-3" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-3" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 3 content
            </div>
        </section>
        <section id="tab-section-4" class="tabs__panel px-4 js-tabs-panel" role="tabpanel" aria-labelledby="tab-4" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-4" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 4 content
            </div>
        </section>
        <section id="tab-section-5" class="tabs__panel px-4 js-tabs-panel" role="tabpanel" aria-labelledby="tab-5" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-5" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 5 content
            </div>
        </section>
        <section id="tab-section-6" class="tabs__panel js-tabs-panel" role="tabpanel" aria-labelledby="tab-6" tabindex="0">
            <div class="tabs__accordion-trigger js-accordion-trigger" aria-controls="tab-section-6" aria-expanded="false" tabindex="0"></div>
            <div class="content" aria-hidden="true">
                tab 6 content
            </div>
        </section>
    </div>

    <div style="height: 96px;"></div>
</div>

@*<div class="pt-6">
    <div class="md:flex mb-4">
        <div class="w-full md:w-1/2 md:mr-6">
            <img src="@(Model.PrimaryImage != null ? Model.PrimaryImage.GetCropUrl(500, 500).ToString() : "https://placehold.it/400x500")"
                 data-default-url="@(Model.PrimaryImage != null ? Model.PrimaryImage.GetCropUrl(500, 500).ToString() : "https://placehold.it/400x500")"
                 class="border w-full product-image" />
            @if (Model.Images.Count() > 1)
            {
                <div class="flex flex-wrap -mx-2">
                    @foreach (var img in Model.Images)
                    {
                        <a href="@(img.GetCropUrl(500, 500).ToString())" class="product-image__thumb w-1/3 px-2 pt-4">
                            <img src="@img.GetCropUrl(150, 150).ToString()" class="border w-full" />
                        </a>
                    }
                </div>
            }
        </div>
        <div class="flex-1">
            @using (Html.BeginUmbracoForm("AddToCart", "CartSurface"))
            {
                <div class="py-10">
                    <h1 class="text-2xl font-bold">@Model.Parent.Name - @Model.Name</h1>
                    @{
                        RenderVariants(store, Model, addedProductReference);
                    }
                </div>

                <button id="add-to-cart" class="font-bold border-4 border-gray-900 px-6 py-3 mb-4 lg:w-1/2 hover:bg-teal-400 hover:border-teal-400 hover:text-white" type="submit">Add to Cart</button>
            }
            <div class="flex">
                <a href="#" class="mr-4 hover:text-teal-400"><i class="fa fa-facebook-square"></i> Share it</a>
                <a href="#" class="mr-4 hover:text-teal-400"><i class="fa fa-twitter"></i> Tweet it</a>
                <a href="#" class="mr-4 hover:text-teal-400"><i class="fa fa-pinterest"></i> Pin it</a>
            </div>
        </div>
    </div>
    <hr class="my-6" />
    <div>
        <h2 class="text-2xl font-bold">Description</h2>
        <div class="rte">
            @Model.LongDescription
        </div>
    </div>
</div>*@

@{
    void RenderVariants(StoreReadOnly store, ProductPage product, string addedProductReference)
    {
        var multiVariantProductPage = Model as MultiVariantProductPage;

        if (multiVariantProductPage != null && multiVariantProductPage.Variants != null && multiVariantProductPage.Variants.Count > 0)
        {
            @Html.Hidden("productReference", Model.GetProductReference())
            @Html.Hidden("productVariantReference", "")

            var attrs = multiVariantProductPage.Variants.GetInUseProductAttributes();

            foreach (var attr in attrs)
            {
                <p class="mt-4">@(attr.Name)</p>
                <select class="w-full border border-gray-300 p-2 mt-1" data-attribute="@(attr.Alias)" data-attribute-name="@(attr.Name)" onchange="updateProductVariantInfo()">
                    @foreach (var val in attr.Values)
                    {
                        <!option value="@val.Alias">@(val.Name)</!option>
                    }
                </select>
            }

            <p class="mt-4" data-variant-price></p>
        }
        else if (product.ChildVariants.Any())
        {
            @* if (product.IsGiftCard)
            {
                var selectedReference = addedProductReference ?? product.ChildVariants.FirstOrDefault()?.GetProductReference();

                <div class="gift-cards flex justify-start space-x-2 mt-4">
                    @foreach (var variant in product.ChildVariants)
                    {
                        var productReference = variant.GetProductReference();

                        <span class="relative">
                            <input type="radio" class="form-radio absolute w-0 h-0" name="productReference" id="giftcard-@productReference" value="@productReference" @Html.Raw(selectedReference == productReference ? "checked=\"checked\"" : "") />
                            <label class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 cursor-pointer" for="giftcard-@productReference">@(variant.CalculatePrice()?.Formatted())</label>
                        </span>
                    }
                </div>
            }
            else
            { *@
            <select name="productReference" class="w-full border border-gray-300 p-2 mt-1">
                @foreach (var variant in product.ChildVariants)
                {
                    var productReference = variant.GetProductReference();

                    <!option value="@productReference" @Html.Raw(addedProductReference == productReference ? "selected=\" selected\"" : "" )>@(variant.Name) - @(variant.CalculatePrice()?.Formatted())</!option>
                }
            </select>
            @* } *@
        }
        else
        {
            @Html.Hidden("productReference", product.GetProductReference())

            <p>@(product.CalculatePrice()?.Formatted())</p>
        }
    }
}
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.MonthYear>
@using ContentModels = WRA.Umbraco.Models;
@using WRA.Umbraco.Web.Helpers;

@{
    Layout = "~/Views/_Layout.cshtml";
    var content = (ContentModels.MonthYear)Model;

    var resultsFiltered = content.Children.Where(p => p.IsVisible()).OrderBy(p => p.Value<DateTime>("date")).Reverse();
    var newsCardFallbackImage = content.Parent?.Value<NewsArticles>("fallbackImage");
}

<header class="container">
    <a class="d-inline-flex align-items-center gap-1 text-decoration-none mt-4 my-lg-5 fw-bold" href="@content.Parent?.Url()">
        <i class="fa fa-chevron-left" width="16" height="16" aria-hidden="true"></i>
        @content.Parent?.Name
    </a>
    <h1>@content.Name</h1>
</header>

<div class="container pb-6">
    @if (resultsFiltered.Any())
    {
        <div id="article-results" class="row my-4 mb-6 g-3 g-lg-6" style="min-height: 500px;">
            @foreach (var item in resultsFiltered)
            {
                var articleTitle = item.HasValue("title") ? item.Value("title") : item.Name;
                var articleDateReadable = String.Format("{0:MMMM d, yyyy}", item.Value("date"));
                var articleDate = String.Format("{0:yyyy-MM-dd}", item.Value("date"));
                var articleCategory = item.Value<WRA.Umbraco.Models.ArticleCategory>("category");
                var newsCardImage = item.Value<Umbraco.Cms.Core.Models.MediaWithCrops>("image");
                var imageSet = !String.IsNullOrEmpty(newsCardImage?.MediaUrl()) ? newsCardImage.GetCropUrl(width: 660, height: 330, furtherOptions: "&format=WebP") : newsCardFallbackImage?.GetCropUrl(width: 660, height: 330, furtherOptions: "&format=WebP");

                string cleanContent = string.Empty;

                if (item.HasValue("richTextContent") && !item.HasValue("excerpt"))
                {
                    cleanContent = HtmlHelperExtensions.ShortenExcerpt(item.Value("richTextContent").ToString(), 135);
                }
                var articleSummary = item.HasValue("excerpt") ? item.Value("excerpt") : cleanContent;

                <div class="d-block col-md-6 col-lg-4">
                    <a href="@item.Url()" class="news-card news-card--lg text-decoration-none d-block p-4" style="color: var(--bs-dark);">
                        <div class="mb-4 ratio ratio-16x9">
                            @if (imageSet != null)
                            {
                                <img src="@imageSet?width=660&height=440" loading="lazy" class="img-fluid" width="660" height="330" alt="@(newsCardImage != null ? newsCardImage.Value("altText") : "")" />
                            }
                        </div>

                        <div class="mb-2 d-flex flex-row align-items-center justify-content-between">
                            @if (item.HasValue("date"))
                            {
                                <time class="fs-xs fw-bold" datetime="@articleDate">
                                    @articleDateReadable
                                </time>
                            }
                            @if (item.HasValue("category"))
                            {
                                <span class="chip chip--no-hover align-self-start">
                                    @articleCategory.Name
                                </span>
                            }
                        </div>

                        <h3 class="h6 mb-2">@articleTitle</h3>
                        <p class="fs-sm">@articleSummary</p>
                    </a>
                </div>
            }
        </div>
    }
</div>
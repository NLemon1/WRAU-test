@using Umbraco.Cms.Web.Common.PublishedModels;
@using WRA.Umbraco.Services;
@using WRA.Umbraco;
@using System.Linq;
@using Umbraco.Commerce.Extensions;
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.SubCategoryPage>
@using ContentModels = WRA.Umbraco.Models;
@{
	Layout = "~/Views/_Layout.cshtml";
    var sectionsTop = Model.Value<IEnumerable<BlockGridItem>>("sectionsTop");
    var sectionsBottom = Model.Value<IEnumerable<BlockGridItem>>("sectionsBottom");
   
    IEnumerable<IPublishedContent> siblingSubcategories = Model.SiblingsAndSelf().Where(x => x.IsVisible()).OrderBy(p => p.Name);

}

<script type="text/javascript">
    window.productDataSubCategory = "@(Model.Name)";
</script>

<header class="page-header page-header--no-accent">
    <div class="container">
        <div class="container--sm">
            <h1 class="js-collection-title mb-0">
                @Model.Name
            </h1>
        </div>
    </div>
</header>

<div class="text-bg-secondary pt-1 pb-5">
    <div class="text-light">
        @await Html.PartialAsync("_breadcrumbsProducts", new ViewDataDictionary(this.ViewData) { { "CssClass", "breadcrumbs--light" } })
    </div>
    <div class="container">
        <label class="visually-hidden" for="collection-filter">Filter Categories</label>
        <select id="collection-filter" class="js-collection-category-filter form-select d-inline-block w-auto">
            @foreach (var siblingSubcategory in siblingSubcategories)
            {
                <!option value="@siblingSubcategory.Url()" @(Model.Id == siblingSubcategory.Id ? "selected" : string.Empty)>@siblingSubcategory.Name</!option>
            }
        </select>
    </div>
</div>

@await Html.PartialAsync("blockgrid/default", sectionsTop)

@* @if (Model.Parent?.Name == "Continuing Education")
{ *@

@if (Model.ProductBundles.Any())
{
    <div class="container my-4 my-lg-6">
        <h2 class="js-listings-title h3 pt-4 mt-4 mt-lg-8 border-top border-medium mb-4">Course Bundle</h2>
        <div>
            @foreach (var courseBundle in Model.ProductBundles)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card card--course-bundle">
                        <div class="card-body">
                            <h3 class="h5 card-title">@courseBundle.Name</h3>
                            <p class="card-text">@courseBundle.ShortDescription</p>
                            <a href="@courseBundle.Url()" class="btn btn-primary">View Course Bundle</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    }

@* } *@

<div class="container my-4 my-lg-6">
    <h2 class="js-listings-title h3 pt-4 mt-4 mt-lg-8 border-top border-medium mb-4">
        @if (Model.Parent.Name == "Continuing Education")
        {
            <text>Individual Classes</text>
        } 
        else if (Model.Parent.Name == "Professional Development")
        {
            <text>Designations</text>
        } 
        else
        {
            <text>Products</text>
        }
    </h2>
    <div class="js-taxonomy-container" hidden>
        <label for="collection-filter" class="d-block text-uppercase font-family-3 fw-normal mb-2">@Model.TaxonomyTypeLabel Type</label>
        <select id="collection-filter" class="js-taxonomy-filter form-select d-inline-block w-auto mb-4 mb-lg-6"></select>
    </div>
    <div class="position-relative" style="min-height: 350px;">
        <div class="js-product-collection row align-items-md-stretch g-4">
        @*  LOAD ON SERVER SIDE TOO?
            @if(Model.Products.Any()){
            @foreach(var product in Model.Products)
            {

                <div class="card card--product">
                    <div class="card-body">
                        <h3 class="h5 card-title">@product.Name</h3>
                        <p class="card-text">@product.ShortDescription</p>
                        <a href="@product.Url()" class="btn btn-primary">View Product</a>
                    </div>
                </div>
            }
        } *@
        </div>
        <div class="js-results-loader search-loading" title="Please wait, loading.">
            <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
        </div>
    </div>
</div>

@await Html.PartialAsync("blockgrid/default", sectionsBottom)

@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = WRA.Umbraco.Models;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<WRA.Umbraco.Models.MywraToolKit>

@{
    Layout = "~/Views/_Layout.cshtml";
    var content = (ContentModels.MywraToolKit)Model;
}

<div class="w-100">
    <div class="row g-0">

        @await Html.PartialAsync("_mywraHeader", new ViewDataDictionary(this.ViewData) { { "isMobile", true } })
        @await Html.PartialAsync("_mywraNav")

        <div class="col position-relative pb-5">
            @await Html.PartialAsync("_mywraHeader", new ViewDataDictionary(this.ViewData) { { "isMobile", false } })
          
            <div class="mywra-right container container--md ms-0 pt-5 pt-lg-11">

                @if (!String.IsNullOrEmpty(content.Headline))
                {
                    <h1 class="h2">@content.Headline</h1>
                }

                @if (!String.IsNullOrEmpty(content.IntroContent.ToString()))
                {
                    <div class="rich-text mb-5">
                        @Html.Raw(content.IntroContent)
                    </div>
                }

                <div class="border border-medium p-4 rounded mb-5">
                    @if (!String.IsNullOrEmpty(content.ZipFormHeadline.ToString()))
                    {
                        <h4 class="h6 mb-4 fs-lg">
                            @Html.Raw(content.ZipFormHeadline)
                        </h4>
                    }
                    @if (!String.IsNullOrEmpty(content.ZipFormContent.ToString()))
                    {
                        <div class="rich-text">
                            @Html.Raw(content.ZipFormContent)
                        </div>
                    }
                    @{
                        var zipFormLink = content.Value<Link>("ZipFormButton");
                    }
                    @if (zipFormLink != null)
                    {
                        <a href="@zipFormLink.Url" class="btn btn-primary" target="@zipFormLink.Target">@zipFormLink.Name</a>
                    }
                </div>
                <div class="border border-medium p-4 rounded mb-5">
                    @if (!String.IsNullOrEmpty(content.FormsLibraryHeadline.ToString()))
                    {
                        <h4 class="h6 mb-4 fs-lg">
                            @Html.Raw(content.FormsLibraryHeadline)
                        </h4>
                    }
                    @if (!String.IsNullOrEmpty(content.FormsLibraryContent.ToString()))
                    {
                        <div class="rich-text">
                            @Html.Raw(content.FormsLibraryContent)
                        </div>
                    }
                    @{
                        var formsLibraryLink = content.Value<Link>("FormsLibraryButton");
                    }
                    @if (formsLibraryLink != null)
                    {
                        <a href="@formsLibraryLink.Url" class="btn btn-primary" target="@formsLibraryLink.Target">@formsLibraryLink.Name</a>
                    }
                </div>
                <div class="border border-medium p-4 rounded mb-5">
                    @if (!String.IsNullOrEmpty(content.LineByLineHeadline.ToString()))
                    {
                        <h4 class="h6 mb-4 fs-lg">
                            @Html.Raw(content.LineByLineHeadline)
                        </h4>
                    }
                    @if (!String.IsNullOrEmpty(content.LineByLineContent.ToString()))
                    {
                        <div class="rich-text">
                            @Html.Raw(content.LineByLineContent)
                        </div>
                    }
                    @{
                        var lineByLineLink = content.Value<Link>("LineByLineButton");
                    }
                    @if (lineByLineLink != null)
                    {
                        <a href="@lineByLineLink.Url" class="btn btn-primary" target="@lineByLineLink.Target">@lineByLineLink.Name</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>